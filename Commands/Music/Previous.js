const { ChatInputCommandInteraction, SlashCommandBuilder, EmbedBuilder } = require("discord.js");
const { useQueue, useHistory } = require("discord-player");

module.exports = {
    data: new SlashCommandBuilder()
    .setName("previous")
    .setNameLocalizations({ "ru": "–ø—Ä–æ—à–ª—ã–π" })
    .setDescription("Plays the previous track")
    .setDescriptionLocalizations({ "ru": "–ò–≥—Ä–∞—Ç—å –ø—Ä–æ—à–ª—ã–π —Ç—Ä–µ–∫." })
    .setDMPermission(false),
    /**
     * @param {ChatInputCommandInteraction} interaction
     */
    async execute(interaction) {
        const { member, user, guild } = interaction;
        const channel = member.voice.channel;
        if(!channel) return interaction.reply('–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!');

        const queue = useQueue(guild.id);
		const history = useHistory(guild.id);

        try {
            if(!queue) {
                return interaction.reply({ content: `–ú–µ–Ω—è –Ω–µ—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ`, ephemeral: true });
            }

            if(!history?.previousTrack) {
                return interaction.reply({ content: `–í –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞`, ephemeral: true });
            }
            
            await history.previous();
            return interaction.reply({ embeds: [new EmbedBuilder()
                .setAuthor({ name: `üîÅ | –ü—Ä–æ—à–ª—ã–π —Ç—Ä–µ–∫`, iconURL: guild.client.user.avatarURL() })
                .setColor("Green").setDescription([
                    `–ü–ª–µ–µ—Ä –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫.`,
                    `__–¢–µ–∫—É—â–∏–π —Ç—Ä–µ–∫__: **[[${queue.currentTrack.title}](${queue.currentTrack.url})]**`,
                    ``,
                    `–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –º—É–∑—ã–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: **\`/skip\`**`
                ].join("\n")).setTimestamp()
                .setFooter({ text: `–ó–∞–ø—Ä–æ—Å–∏–ª: ${member.nickname || user.displayName}`, iconURL: user.avatarURL() })]
            });
        } catch (e) {
            interaction.reply(e);
            throw e;
        }
    }
}