const { ThreadChannel, EmbedBuilder, WebhookClient, Client } = require("discord.js");

module.exports = {
    name: "threadUpdate",
    /**
     * @param {ThreadChannel} oldThread
     * @param {ThreadChannel} newThread
     * @param {Client} client
     */
    async execute(oldThread, newThread, client) {
        if(oldThread.type !== "GUILD_NEWS_THREAD" && oldThread.type !== "GUILD_PUBLIC_THREAD" && oldThread.type !== "GUILD_PRIVATE_THREAD") return;

        const webHookData = await client.webHooks.get(guild.id);
        if(!webHookData) return;

        const { WebHookID, WebHookToken } = webHookData.AUDIT_THREAD_WEBHOOK;
        if(!(WebHookID || WebHookToken)) return;

        const webhook = new WebhookClient({ id: WebHookID, token: WebHookToken });
        
        if (oldThread.name !== newThread.name) {
            const Embed = new EmbedBuilder()
            .setTitle("üå≥ __**–í–µ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞**__ üå≥").setColor("#3ccffa")
            .setDescription(`\`‚Ä¢\` ${oldThread} | –ò–º—è –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
            .addFields(
                { name: "–°—Ç–∞—Ä–æ–µ –∏–º—è", value: `\`${oldThread.name}\``, inline: true },
                { name: "–ù–æ–≤–æ–µ –∏–º—è", value: `\`${newThread.name}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] })
        }

        if(oldThread.type !== newThread.type) {
            const Embed = new EmbedBuilder()
            .setTitle("üå≥ __**–í–µ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞**__ üå≥").setColor("#3ccffa")
            .setDescription(`\`‚Ä¢\` ${oldThread} | –¢–∏–ø –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω`)
            .addFields(
                { name: "–°—Ç–∞—Ä—ã–π —Ç–∏–ø", value: `\`${oldThread.type}\``, inline: true },
                { name: "–ù–æ–≤—ã–π —Ç–∏–ø", value: `\`${newThread.type}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] })
        }

        if(oldThread.rateLimitPerUser !== newThread.rateLimitPerUser) {
            const Embed = new EmbedBuilder()
            .setTitle("üå≥ __**–í–µ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞**__ üå≥").setColor("#3ccffa")
            .setDescription(`\`‚Ä¢\` ${oldThread} | –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
            .addFields(
                { name: "–°—Ç–∞—Ä–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å", value: `\`${oldThread.rateLimitPerUser}\``, inline: true },
                { name: "–ù–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å", value: `\`${newThread.rateLimitPerUser}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] })
        }

        if(oldThread.parent !== newThread.parent) {
            const Embed = new EmbedBuilder()
            .setTitle("üå≥ __**–í–µ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞**__ üå≥").setColor("#3ccffa")
            .setDescription(`\`‚Ä¢\` ${oldThread} | –†–æ–¥–∏—Ç–µ–ª—å –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω`)
            .addFields(
                { name: "–°—Ç–∞—Ä—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å", value: `\`${oldThread.parent}\``, inline: true },
                { name: "–ù–æ–≤—ã–π —Ä–æ–¥–∏—Ç–µ–ª—å", value: `\`${newThread.parent}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] })
        }

        if(oldThread.archived !== newThread.archived) {
            const Embed = new EmbedBuilder()
            .setTitle("üå≥ __**–í–µ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞**__ üå≥").setColor("#3ccffa")
            .setDescription(`\`‚Ä¢\` ${oldThread} | –ó–Ω–∞—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
            .addFields(
                { name: "–°—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ", value: `\`${oldThread.archived}\``, inline: true },
                { name: "–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ", value: `\`${newThread.archived}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] })
        }
    }
}