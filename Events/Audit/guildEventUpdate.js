const { GuildScheduledEventManager, EmbedBuilder, WebhookClient, Client } = require("discord.js");

module.exports = {
    name: "guildScheduledEventUpdate",
    /**
     * @param {GuildScheduledEventManager} oldEvent
     * @param {GuildScheduledEventManager} newEvent
     * @param {Client} client
     */
    async execute(oldEvent, newEvent, client) {
        const webHookData = await client.webHooks.get(guild.id);
        if(!webHookData) return;

        const { WebHookID, WebHookToken } = webHookData.AUDIT_EVENT_WEBHOOK;
        if(!(WebHookID || WebHookToken)) return;

        const webhook = new WebhookClient({ id: WebHookID, token: WebHookToken });
        
        if(oldEvent.name !== newEvent.name) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –ò–º—è –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
            .addFields(
                { name: "–°—Ç–∞—Ä–æ–µ –∏–º—è", value: `\`${oldEvent.name}\``, inline: true },
                { name: "–ù–æ–≤–æ–µ –∏–º—è", value: `\`${newEvent.name}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.channel !== newEvent.channel) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –ö–∞–Ω–∞–ª –∏–≤–µ–Ω—Ç–∞ –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω`)
            .addFields(
                { name: "–°—Ç–∞—Ä—ã–π –∫–∞–Ω–∞–ª", value: `${oldEvent.channel ? oldEvent.channel : "None"}`, inline: true },
                { name: "–ù–æ–≤—ã–π –∫–∞–Ω–∞–ª", value: `${newEvent.channel ? newEvent.channel : "None"}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.scheduledStartAt !== newEvent.scheduledStartAt) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞`)
            .addFields(
                { name: "–°—Ç–∞—Ä–∞—è –¥–∞—Ç–∞", value: `${oldEvent.scheduledStartAt ? ("<t:" + parseInt(oldEvent.scheduledStartAt / 1000) + ":R>") : "None"}`, inline: true },
                { name: "–ù–æ–≤–∞—è –¥–∞—Ç–∞", value: `${newEvent.scheduledStartAt ? ("<t:" + parseInt(newEvent.scheduledStartAt / 1000) + ":R>") : "None"}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.scheduledEndAt !== newEvent.scheduledEndAt) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞`)
            .addFields(
                { name: "–°—Ç–∞—Ä–∞—è –¥–∞—Ç–∞", value: `${oldEvent.scheduledEndAt ? ("<t:" + parseInt(oldEvent.scheduledEndAt / 1000) + ":R>") : "None"}`, inline: true },
                { name: "–ù–æ–≤–∞—è –¥–∞—Ç–∞", value: `${newEvent.scheduledEndAt ? ("<t:" + parseInt(newEvent.scheduledEndAt / 1000) + ":R>") : "None"}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.description !== newEvent.description) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –û–ø–∏—Å–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
            .addFields(
                { name: "–°—Ç–∞—Ä–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ", value: `${oldEvent.description ? oldEvent.description : "None"}`, inline: true },
                { name: "–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ", value: `${newEvent.description ? newEvent.description : "None"}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.status !== newEvent.status) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –°—Ç–∞—Ç—É—Å –∏–≤–µ–Ω—Ç–∞ –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω`)
            .addFields(
                { name: "–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å", value: `${oldEvent.status}`, inline: true },
                { name: "–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å", value: `${newEvent.status}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.entityType !== newEvent.entityType) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –¢–∏–ø –∏–≤–µ–Ω—Ç–∞ –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω`)
            .addFields(
                { name: "–°—Ç–∞—Ä—ã–π —Ç–∏–ø", value: `\`${oldEvent.entityType}\``, inline: true },
                { name: "–ù–æ–≤—ã–π —Ç–∏–ø", value: `\`${newEvent.entityType}\``, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.entityMetadata !== newEvent.entityMetadata) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –ú–µ—Å—Ç–æ –ø—Ä–æ–≤–∏–¥–µ–Ω–∏—è –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ`)
            .addFields(
                { name: "–°—Ç–∞—Ä–æ–µ –º–µ—Å—Ç–æ", value: `${oldEvent.entityMetadata?.location ? oldEvent.entityMetadata.location : "None"}`, inline: true },
                { name: "–ù–æ–≤–æ–µ –º–µ—Å—Ç–æ", value: `${newEvent.entityMetadata?.location ? newEvent.entityMetadata.location : "None"}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }

        if(oldEvent.privacyLevel !== newEvent.privacyLevel) {
            const Embed = new EmbedBuilder().setColor("#3ccffa").setTitle("üéä __**–ò–≤–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω**__ üéä")
            .setDescription(`[${newEvent.name}](${newEvent}) | –£—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω`)
            .addFields(
                { name: "–°—Ç–∞—Ä—ã–π —É—Ä–æ–≤–µ–Ω—å", value: `${oldEvent.privacyLevel}`, inline: true },
                { name: "–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å", value: `${newEvent.privacyLevel}`, inline: true }
            )
            .setTimestamp()

            webhook.send({ embeds: [Embed] });
        }
    }
}