const { EmbedBuilder, Message, WebhookClient, Client } = require("discord.js");
const { Error } = require("../../Structures/Utilities/Logger");

// TODO: –û–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è

module.exports = {
    name: "messageDelete",
    /**
     * @param {Message} message
     * @param {Client} client
     */
    async execute(message, client) {
        const { author, channel, guild, attachments, content } = message;
        if(author.bot) return;

        //–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ —é—Ä–∏—Å–¥–∏–∫—Ü–∏–∏ Anti-Scam. –ò–∑–±–µ–≥–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
        const Filter = require(`../../Structures/Data/ScamLinks.json`);
        const ScamFilter = Filter.some((Word) => content.toLowerCase().split(" ").includes(Word.toLowerCase()));
        if(ScamFilter) return;

        //–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–µ–±—Ö—É–∫–∞
        const webHookData = await client.webHooks.get(guild.id);
        if(!webHookData) return;

        const { WebHookID, WebHookToken } = webHookData.AUDIT_MESSAGE_WEBHOOK;
        if(!WebHookID || !WebHookToken) return;

        const webhook = new WebhookClient({ id: WebHookID, token: WebHookToken });

        //–í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ
        const Embed = new EmbedBuilder().setColor("#36393f")
        .setDescription([
            `üìï [–°–æ–æ–±—â–µ–Ω–∏–µ](${message.url}) –±—ã–ª–æ **—É–¥–∞–ª–µ–Ω–æ**.`,
            `**–£–¥–∞–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:**`,
            `\`\`\`${content ? content : "None"}\`\`\``.slice(0, 4096)
        ].join("\n"))
        .addFields({ name: `**–ê–≤—Ç–æ—Ä**`, value: `${author}`, inline: true })
        .setFooter({ text: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${author.tag} | ID: ${author.id}` }).setTimestamp();

        if(channel.isThread()) {
            Embed.addFields({ name: `**–í–µ—Ç–∫–∞**`, value: `<#${channel.id}>`, inline: true });
        } else {
            Embed.addFields({ name: `**–ö–∞–Ω–∞–ª**`, value: `<#${channel.id}>`, inline: true });
        }

        if(attachments.size >= 1){
            Embed.addFields({ name: `–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ`, value: `${attachments.map(a => a.url).join(" ")}`, inline: true });
        }

        return webhook.send({ embeds: [Embed] }).catch(e => {
            return Error(`[Audit/messageDelete] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:\n${e}`);
        });
    }
}